import os
from flask import Flask, request
from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup, LabeledPrice
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters
import asyncio

TOKEN = os.getenv("TOKEN") or "7323003204:AAEuLZHtAmhy0coPk3tMEQamsa9ftuUguGc"
PAYMENT_TOKEN = os.getenv("PAYMENT_TOKEN") or "–¢–í–û–ô_–¢–û–ö–ï–ù_–û–ü–õ–ê–¢–´"
WEBHOOK_URL = os.getenv("WEBHOOK_URL") or "https://–¢–í–û–ô-–ê–î–†–ï–°.onrender.com"

app = Flask(__name__)
bot = Bot(token=TOKEN)

# –ì–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
VIP_USERS = set()

# === /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üî• –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø (VIP)", callback_data="get_vip")],
    ]
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
        "–Ø ‚Äî –ò–ò-–¥–µ–≤—É—à–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è—é –≥–æ—Ä—è—á–∏–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ üíã\n"
        "üîì –ü–æ–ª—É—á–∏ VIP –¥–æ—Å—Ç—É–ø, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤—Å—ë üòâ"
    )
    await update.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard))

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ ===
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "get_vip":
        prices = [LabeledPrice("üî• VIP –¥–æ—Å—Ç—É–ø", 19900)]  # 199.00‚ÇΩ
        await bot.send_invoice(
            chat_id=query.from_user.id,
            title="VIP –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É",
            description="–†–∞–∑–±–ª–æ–∫–∏—Ä—É–π –¥–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ –≥–æ–ª–æ—Å–∞–º.",
            payload="vip_access",
            provider_token=PAYMENT_TOKEN,
            currency="RUB",
            prices=prices,
            start_parameter="vip-subscription",
        )

# === –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ ===
async def successful_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    VIP_USERS.add(user_id)
    await update.message.reply_text("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VIP üòà")

# === –°–æ–æ–±—â–µ–Ω–∏—è ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.lower()

    if "—Ñ–æ—Ç–æ" in text or "–ø–æ–∫–∞–∂–∏" in text:
        if user_id in VIP_USERS:
            await update.message.reply_photo("https://example.com/sexy.jpg", caption="–í–æ—Ç —Ç–µ–±–µ –≥–æ—Ä—è—á–µ–µ —Ñ–æ—Ç–æ üòò")
        else:
            keyboard = [[InlineKeyboardButton("üî• –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="get_vip")]]
            await update.message.reply_text("üîí –≠—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ VIP:", reply_markup=InlineKeyboardMarkup(keyboard))
    else:
        await update.message.reply_text("‚ù§Ô∏è –ù–∞–ø–∏—à–∏ ¬´—Ñ–æ—Ç–æ¬ª –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –Ω–µ—á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ...")

# === Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞ ===
@app.route(f"/{TOKEN}", methods=["POST"])
async def telegram_webhook():
    data = request.get_json(force=True)
    update = Update.de_json(data, bot)
    await app.bot_app.update_queue.put(update)
    return "ok"

@app.route("/", methods=["GET"])
def home():
    return "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!"

# === –ó–∞–ø—É—Å–∫ Flask + Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===
async def main():
    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    application.add_handler(MessageHandler(filters.SUCCESSFUL_PAYMENT, successful_payment))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    await bot.set_webhook(f"{WEBHOOK_URL}/{TOKEN}")
    app.bot_app = application

    print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    await application.initialize()
    await application.start()

if __name__ == "__main__":
    asyncio.get_event_loop().run_until_complete(main())
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
